"""
Django settings for Chatbot project.

Generated by 'django-admin startproject' using Django 1.11.4.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
import datetime


def get_env(name, default=None):
    try:
        return os.environ[name]
    except Exception as e:

        if default is None:
            raise e
            print("ERROR: Missing varibale %s: %s"%(name, e))
            sys.exit(-1)
        else:
            print("Warning: Variable %s"%name)
            return default

DEFAULT_DOMAIN = get_env("DOMAIN", "http://0.0.0.0:8000")



# MST
ASSISTANT_APIKEY = get_env('ASSISTANT_APIKEY', 'ZOZCVSAQ_KUPOCikihrHE7wpZWZ0zPU57iChzcv8LREa')
ASSISTANT_VERSION = get_env('ASSISTANT_VERSION', '2018-09-20')
ASSISTANT_ID = get_env('ASSISTANT_ID', "5281e02a-3082-4660-bcdb-f256b94c502b")


# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_env('SECRET_KEY', 'y+_=94p1kwt02uk=rjay&4i5j)9s(4-nt!^dn@2s=ycoy3o3h5')

# Esta variable settea SECURE_SSL_REDIRECT mas abajo
USE_SSL = bool(int(get_env('USE_SSL', 0)))

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(get_env('DEBUG', 1)))

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

VERSION_DATE = datetime.datetime.now().strftime("%Y-%m-%d.0.1")

# Limites del Token
SOFT_LIMIT_PER_TOKEN = 3
HARD_LIMIT_PER_TOKEN = 6


ALLOWED_HOSTS = ['*']
LOGIN_URL = '/login'

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'corsheaders',
    'django_user_agents',
    'chatbot',
    # "compressor",
]



MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
]

ROOT_URLCONF = 'server.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'server.wsgi.application'



DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}



AUTH_USER_MODEL = 'chatbot.User'

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'America/Caracas'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static asset configuration
#BASE_DIR = os.path.dirname(os.path.abspath(__file__))
PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')
STATIC_URL = '/static/'

STATICFILES_DIRS = (
    os.path.join(PROJECT_ROOT, 'static'),
)

# Directorio de templates y de statics.
STATICFILES_DIRS = [os.path.join(BASE_DIR,'static')]

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

if USE_SSL:
    SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
    SECURE_SSL_REDIRECT = True
else:
    SECURE_SSL_REDIRECT = False

SESSION_COOKIE_SECURE = False
CSRF_COOKIE_SECURE = False

CORS_ORIGIN_ALLOW_ALL = True

APPEND_SLASH = False

STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    # 'compressor.finders.CompressorFinder',
]
